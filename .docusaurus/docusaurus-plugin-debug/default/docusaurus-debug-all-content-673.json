{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "Next",
          "banner": null,
          "badge": false,
          "noIndex": false,
          "className": "docs-version-current",
          "path": "/docs",
          "tagsPath": "/docs/tags",
          "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs",
          "editUrlLocalized": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/i18n/en/docusaurus-plugin-content-docs/current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "C:\\Users\\hikou\\repos\\metro\\metro-api-v2\\documentation\\sidebars.js",
          "contentPath": "C:\\Users\\hikou\\repos\\metro\\metro-api-v2\\documentation\\docs",
          "contentPathLocalized": "C:\\Users\\hikou\\repos\\metro\\metro-api-v2\\documentation\\i18n\\en\\docusaurus-plugin-content-docs\\current",
          "docs": [
            {
              "unversionedId": "intro",
              "id": "intro",
              "title": "Tutorial Intro",
              "description": "Let's discover Docusaurus in less than 5 minutes.",
              "source": "@site/docs/intro.md",
              "sourceDirName": ".",
              "slug": "/intro",
              "permalink": "/docs/intro",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",
              "tags": [
                {
                  "label": "test",
                  "permalink": "/docs/tags/test"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "tags": [
                  "test"
                ]
              },
              "sidebar": "tutorialSidebar",
              "next": {
                "title": "Tutorial - Basics",
                "permalink": "/docs/category/tutorial---basics"
              }
            },
            {
              "unversionedId": "petstore/all-trip-updates-updates-agency-id-trip-updates-all-get",
              "id": "petstore/all-trip-updates-updates-agency-id-trip-updates-all-get",
              "title": "All Trip Updates Updates",
              "description": "All Trip Updates Updates",
              "source": "@site/docs/petstore/all-trip-updates-updates-agency-id-trip-updates-all-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/all-trip-updates-updates-agency-id-trip-updates-all-get",
              "permalink": "/docs/petstore/all-trip-updates-updates-agency-id-trip-updates-all-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "all-trip-updates-updates-agency-id-trip-updates-all-get",
                "title": "All Trip Updates Updates",
                "description": "All Trip Updates Updates",
                "sidebar_label": "All Trip Updates Updates",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "all_trip_updates_updates__agency_id__trip_updates_all_get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Real-Time data"
                  ],
                  "description": "All Trip Updates Updates",
                  "method": "get",
                  "path": "/{agency_id}/trip_updates/all",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "All Trip Updates Updates",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "trip_updates",
                        "all"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Trip Detail",
                "permalink": "/docs/petstore/get-trip-detail-agency-id-trip-detail-vehicle-id-get"
              },
              "next": {
                "title": "Get Gtfs Rt Trip Updates By Field Name",
                "permalink": "/docs/petstore/get-gtfs-rt-trip-updates-by-field-name-agency-id-trip-updates-field-name-field-value-get"
              }
            },
            {
              "unversionedId": "petstore/all-vehicle-position-updates-agency-id-vehicle-positions-all-get",
              "id": "petstore/all-vehicle-position-updates-agency-id-vehicle-positions-all-get",
              "title": "All Vehicle Position Updates",
              "description": "All Vehicle Position Updates",
              "source": "@site/docs/petstore/all-vehicle-position-updates-agency-id-vehicle-positions-all-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/all-vehicle-position-updates-agency-id-vehicle-positions-all-get",
              "permalink": "/docs/petstore/all-vehicle-position-updates-agency-id-vehicle-positions-all-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "all-vehicle-position-updates-agency-id-vehicle-positions-all-get",
                "title": "All Vehicle Position Updates",
                "description": "All Vehicle Position Updates",
                "sidebar_label": "All Vehicle Position Updates",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "all_vehicle_position_updates__agency_id__vehicle_positions_all_get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "query",
                      "name": "geojson",
                      "required": false,
                      "schema": {
                        "default": false,
                        "title": "Geojson",
                        "type": "boolean"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Real-Time data"
                  ],
                  "description": "All Vehicle Position Updates",
                  "method": "get",
                  "path": "/{agency_id}/vehicle_positions/all",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "All Vehicle Position Updates",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "vehicle_positions",
                        "all"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "geojson",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Gtfs Rt Trip Updates By Field Name",
                "permalink": "/docs/petstore/get-gtfs-rt-trip-updates-by-field-name-agency-id-trip-updates-field-name-field-value-get"
              },
              "next": {
                "title": "Vehicle Position Updates",
                "permalink": "/docs/petstore/vehicle-position-updates-agency-id-vehicle-positions-field-name-field-value-get"
              }
            },
            {
              "unversionedId": "petstore/create-user-users-post",
              "id": "petstore/create-user-users-post",
              "title": "Create User",
              "description": "Create User",
              "source": "@site/docs/petstore/create-user-users-post.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/create-user-users-post",
              "permalink": "/docs/petstore/create-user-users-post",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "create-user-users-post",
                "title": "Create User",
                "description": "Create User",
                "sidebar_label": "Create User",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "create_user_users__post",
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "properties": {
                            "email": {
                              "title": "Email",
                              "type": "string"
                            },
                            "password": {
                              "title": "Password",
                              "type": "string"
                            },
                            "username": {
                              "title": "Username",
                              "type": "string"
                            }
                          },
                          "required": [
                            "username",
                            "email",
                            "password"
                          ],
                          "title": "UserCreate",
                          "type": "object"
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "email": {
                                "title": "Email",
                                "type": "string"
                              },
                              "id": {
                                "title": "Id",
                                "type": "integer"
                              },
                              "is_active": {
                                "title": "Is Active",
                                "type": "boolean"
                              },
                              "username": {
                                "title": "Username",
                                "type": "string"
                              }
                            },
                            "required": [
                              "username",
                              "email",
                              "id",
                              "is_active"
                            ],
                            "title": "User",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "User Methods"
                  ],
                  "description": "Create User",
                  "method": "post",
                  "path": "/users/",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "jsonRequestBodyExample": {
                    "email": "string",
                    "password": "string",
                    "username": "string"
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Create User",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "users",
                        ""
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Login For Access Token",
                "permalink": "/docs/petstore/login-for-access-token-token-post"
              },
              "next": {
                "title": "Read User",
                "permalink": "/docs/petstore/read-user-users-username-get"
              }
            },
            {
              "unversionedId": "petstore/fastapi",
              "id": "petstore/fastapi",
              "title": "FastAPI",
              "description": "",
              "source": "@site/docs/petstore/fastapi.info.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/fastapi",
              "permalink": "/docs/petstore/fastapi",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "sidebarPosition": 0,
              "frontMatter": {
                "id": "fastapi",
                "title": "FastAPI",
                "description": "",
                "sidebar_label": "Introduction",
                "sidebar_position": 0,
                "hide_title": true,
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Petstore",
                "permalink": "/docs/category/petstore-api"
              },
              "next": {
                "title": "Get Calendar Dates From Db",
                "permalink": "/docs/petstore/get-calendar-dates-from-db-calendar-dates-get"
              }
            },
            {
              "unversionedId": "petstore/get-agency-agency-id-agency-get",
              "id": "petstore/get-agency-agency-id-agency-get",
              "title": "Get Agency",
              "description": "Get Agency",
              "source": "@site/docs/petstore/get-agency-agency-id-agency-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-agency-agency-id-agency-get",
              "permalink": "/docs/petstore/get-agency-agency-id-agency-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-agency-agency-id-agency-get",
                "title": "Get Agency",
                "description": "Get Agency",
                "sidebar_label": "Get Agency",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_agency__agency_id__agency__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Get Agency",
                  "method": "get",
                  "path": "/{agency_id}/agency/",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Agency",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "agency",
                        ""
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Calendar Dates From Db",
                "permalink": "/docs/petstore/get-calendar-dates-from-db-calendar-dates-get"
              },
              "next": {
                "title": "Get Calendar",
                "permalink": "/docs/petstore/get-calendar-agency-id-calendar-service-id-get"
              }
            },
            {
              "unversionedId": "petstore/get-bus-trips-agency-id-trips-trip-id-get",
              "id": "petstore/get-bus-trips-agency-id-trips-trip-id-get",
              "title": "Get Bus Trips",
              "description": "Get Bus Trips",
              "source": "@site/docs/petstore/get-bus-trips-agency-id-trips-trip-id-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-bus-trips-agency-id-trips-trip-id-get",
              "permalink": "/docs/petstore/get-bus-trips-agency-id-trips-trip-id-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-bus-trips-agency-id-trips-trip-id-get",
                "title": "Get Bus Trips",
                "description": "Get Bus Trips",
                "sidebar_label": "Get Bus Trips",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_bus_trips__agency_id__trips__trip_id__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "trip_id",
                      "required": true,
                      "schema": {
                        "title": "Trip Id"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Get Bus Trips",
                  "method": "get",
                  "path": "/{agency_id}/trips/{trip_id}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Bus Trips",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "trips",
                        ":trip_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "trip_id"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Trip Shapes",
                "permalink": "/docs/petstore/get-trip-shapes-agency-id-trip-shapes-shape-id-get"
              },
              "next": {
                "title": "Get Canceled Trip",
                "permalink": "/docs/petstore/get-canceled-trip-canceled-service-all-get"
              }
            },
            {
              "unversionedId": "petstore/get-calendar-agency-id-calendar-service-id-get",
              "id": "petstore/get-calendar-agency-id-calendar-service-id-get",
              "title": "Get Calendar",
              "description": "Get Calendar",
              "source": "@site/docs/petstore/get-calendar-agency-id-calendar-service-id-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-calendar-agency-id-calendar-service-id-get",
              "permalink": "/docs/petstore/get-calendar-agency-id-calendar-service-id-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-calendar-agency-id-calendar-service-id-get",
                "title": "Get Calendar",
                "description": "Get Calendar",
                "sidebar_label": "Get Calendar",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_calendar__agency_id__calendar__service_id__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "service_id",
                      "required": true,
                      "schema": {
                        "title": "Service Id"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Get Calendar",
                  "method": "get",
                  "path": "/{agency_id}/calendar/{service_id}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Calendar",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "calendar",
                        ":service_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "service_id"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Agency",
                "permalink": "/docs/petstore/get-agency-agency-id-agency-get"
              },
              "next": {
                "title": "Get Routes",
                "permalink": "/docs/petstore/get-routes-agency-id-route-overview-get"
              }
            },
            {
              "unversionedId": "petstore/get-calendar-dates-from-db-calendar-dates-get",
              "id": "petstore/get-calendar-dates-from-db-calendar-dates-get",
              "title": "Get Calendar Dates From Db",
              "description": "Get Calendar Dates From Db",
              "source": "@site/docs/petstore/get-calendar-dates-from-db-calendar-dates-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-calendar-dates-from-db-calendar-dates-get",
              "permalink": "/docs/petstore/get-calendar-dates-from-db-calendar-dates-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-calendar-dates-from-db-calendar-dates-get",
                "title": "Get Calendar Dates From Db",
                "description": "Get Calendar Dates From Db",
                "sidebar_label": "Get Calendar Dates From Db",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_calendar_dates_from_db_calendar_dates_get",
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Get Calendar Dates From Db",
                  "method": "get",
                  "path": "/calendar_dates",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Calendar Dates From Db",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "calendar_dates"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Introduction",
                "permalink": "/docs/petstore/fastapi"
              },
              "next": {
                "title": "Get Agency",
                "permalink": "/docs/petstore/get-agency-agency-id-agency-get"
              }
            },
            {
              "unversionedId": "petstore/get-canceled-trip-canceled-service-all-get",
              "id": "petstore/get-canceled-trip-canceled-service-all-get",
              "title": "Get Canceled Trip",
              "description": "Get Canceled Trip",
              "source": "@site/docs/petstore/get-canceled-trip-canceled-service-all-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-canceled-trip-canceled-service-all-get",
              "permalink": "/docs/petstore/get-canceled-trip-canceled-service-all-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-canceled-trip-canceled-service-all-get",
                "title": "Get Canceled Trip",
                "description": "Get Canceled Trip",
                "sidebar_label": "Get Canceled Trip",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_canceled_trip_canceled_service_all_get",
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    }
                  },
                  "tags": [
                    "Real-Time data"
                  ],
                  "description": "Get Canceled Trip",
                  "method": "get",
                  "path": "/canceled_service/all",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Canceled Trip",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "canceled_service",
                        "all"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Bus Trips",
                "permalink": "/docs/petstore/get-bus-trips-agency-id-trips-trip-id-get"
              },
              "next": {
                "title": "Get Canceled Trip",
                "permalink": "/docs/petstore/get-canceled-trip-canceled-service-line-line-get"
              }
            },
            {
              "unversionedId": "petstore/get-canceled-trip-canceled-service-line-line-get",
              "id": "petstore/get-canceled-trip-canceled-service-line-line-get",
              "title": "Get Canceled Trip",
              "description": "Get Canceled Trip",
              "source": "@site/docs/petstore/get-canceled-trip-canceled-service-line-line-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-canceled-trip-canceled-service-line-line-get",
              "permalink": "/docs/petstore/get-canceled-trip-canceled-service-line-line-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-canceled-trip-canceled-service-line-line-get",
                "title": "Get Canceled Trip",
                "description": "Get Canceled Trip",
                "sidebar_label": "Get Canceled Trip",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_canceled_trip_canceled_service_line__line__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "line",
                      "required": true,
                      "schema": {
                        "title": "Line",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Real-Time data"
                  ],
                  "description": "Get Canceled Trip",
                  "method": "get",
                  "path": "/canceled_service/line/{line}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Canceled Trip",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "canceled_service",
                        "line",
                        ":line"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "line"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Canceled Trip",
                "permalink": "/docs/petstore/get-canceled-trip-canceled-service-all-get"
              },
              "next": {
                "title": "Get Canceled Trip Summary",
                "permalink": "/docs/petstore/get-canceled-trip-summary-canceled-service-summary-get"
              }
            },
            {
              "unversionedId": "petstore/get-canceled-trip-summary-canceled-service-summary-get",
              "id": "petstore/get-canceled-trip-summary-canceled-service-summary-get",
              "title": "Get Canceled Trip Summary",
              "description": "Get Canceled Trip Summary",
              "source": "@site/docs/petstore/get-canceled-trip-summary-canceled-service-summary-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-canceled-trip-summary-canceled-service-summary-get",
              "permalink": "/docs/petstore/get-canceled-trip-summary-canceled-service-summary-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-canceled-trip-summary-canceled-service-summary-get",
                "title": "Get Canceled Trip Summary",
                "description": "Get Canceled Trip Summary",
                "sidebar_label": "Get Canceled Trip Summary",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_canceled_trip_summary_canceled_service_summary_get",
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    }
                  },
                  "tags": [
                    "Real-Time data"
                  ],
                  "description": "Get Canceled Trip Summary",
                  "method": "get",
                  "path": "/canceled_service_summary",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Canceled Trip Summary",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "canceled_service_summary"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Canceled Trip",
                "permalink": "/docs/petstore/get-canceled-trip-canceled-service-line-line-get"
              },
              "next": {
                "title": "Get Trip Detail",
                "permalink": "/docs/petstore/get-trip-detail-agency-id-trip-detail-vehicle-id-get"
              }
            },
            {
              "unversionedId": "petstore/get-gopass-schools-get-gopass-schools-get",
              "id": "petstore/get-gopass-schools-get-gopass-schools-get",
              "title": "Get Gopass Schools",
              "description": "Get Gopass Schools",
              "source": "@site/docs/petstore/get-gopass-schools-get-gopass-schools-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-gopass-schools-get-gopass-schools-get",
              "permalink": "/docs/petstore/get-gopass-schools-get-gopass-schools-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-gopass-schools-get-gopass-schools-get",
                "title": "Get Gopass Schools",
                "description": "Get Gopass Schools",
                "sidebar_label": "Get Gopass Schools",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_gopass_schools_get_gopass_schools_get",
                  "parameters": [
                    {
                      "in": "query",
                      "name": "show_missing",
                      "required": false,
                      "schema": {
                        "default": false,
                        "title": "Show Missing",
                        "type": "boolean"
                      }
                    },
                    {
                      "in": "query",
                      "name": "combine_phone",
                      "required": false,
                      "schema": {
                        "default": false,
                        "title": "Combine Phone",
                        "type": "boolean"
                      }
                    },
                    {
                      "in": "query",
                      "name": "groupby_column",
                      "required": false,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "id",
                          "school"
                        ],
                        "title": "GoPassGroupEnum",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Other data"
                  ],
                  "description": "Get Gopass Schools",
                  "method": "get",
                  "path": "/get_gopass_schools",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Gopass Schools",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "get_gopass_schools"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "show_missing",
                          "value": ""
                        },
                        {
                          "disabled": false,
                          "key": "combine_phone",
                          "value": ""
                        },
                        {
                          "disabled": false,
                          "key": "groupby_column",
                          "value": ""
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Vehicle Position Updates",
                "permalink": "/docs/petstore/vehicle-position-updates-agency-id-vehicle-positions-field-name-field-value-get"
              },
              "next": {
                "title": "Login",
                "permalink": "/docs/petstore/login-login-get"
              }
            },
            {
              "unversionedId": "petstore/get-gtfs-rt-trip-updates-by-field-name-agency-id-trip-updates-field-name-field-value-get",
              "id": "petstore/get-gtfs-rt-trip-updates-by-field-name-agency-id-trip-updates-field-name-field-value-get",
              "title": "Get Gtfs Rt Trip Updates By Field Name",
              "description": "Get Gtfs Rt Trip Updates By Field Name",
              "source": "@site/docs/petstore/get-gtfs-rt-trip-updates-by-field-name-agency-id-trip-updates-field-name-field-value-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-gtfs-rt-trip-updates-by-field-name-agency-id-trip-updates-field-name-field-value-get",
              "permalink": "/docs/petstore/get-gtfs-rt-trip-updates-by-field-name-agency-id-trip-updates-field-name-field-value-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-gtfs-rt-trip-updates-by-field-name-agency-id-trip-updates-field-name-field-value-get",
                "title": "Get Gtfs Rt Trip Updates By Field Name",
                "description": "Get Gtfs Rt Trip Updates By Field Name",
                "sidebar_label": "Get Gtfs Rt Trip Updates By Field Name",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_gtfs_rt_trip_updates_by_field_name__agency_id__trip_updates__field_name___field_value__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "field_name",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "trip_id",
                          "route_id",
                          "stop_id"
                        ],
                        "title": "TripUpdatesFieldsEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "field_value",
                      "required": true,
                      "schema": {
                        "title": "Field Value"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Real-Time data"
                  ],
                  "description": "Get Gtfs Rt Trip Updates By Field Name",
                  "method": "get",
                  "path": "/{agency_id}/trip_updates/{field_name}/{field_value}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Gtfs Rt Trip Updates By Field Name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "trip_updates",
                        ":field_name",
                        ":field_value"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "field_name"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "field_value"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "All Trip Updates Updates",
                "permalink": "/docs/petstore/all-trip-updates-updates-agency-id-trip-updates-all-get"
              },
              "next": {
                "title": "All Vehicle Position Updates",
                "permalink": "/docs/petstore/all-vehicle-position-updates-agency-id-vehicle-positions-all-get"
              }
            },
            {
              "unversionedId": "petstore/get-routes-agency-id-route-overview-get",
              "id": "petstore/get-routes-agency-id-route-overview-get",
              "title": "Get Routes",
              "description": "Get Routes",
              "source": "@site/docs/petstore/get-routes-agency-id-route-overview-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-routes-agency-id-route-overview-get",
              "permalink": "/docs/petstore/get-routes-agency-id-route-overview-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-routes-agency-id-route-overview-get",
                "title": "Get Routes",
                "description": "Get Routes",
                "sidebar_label": "Get Routes",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_routes__agency_id__route_overview_get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail",
                          "all"
                        ],
                        "title": "AllAgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "query",
                      "name": "route_code",
                      "required": false,
                      "schema": {
                        "default": "",
                        "title": "Route Code",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Get Routes",
                  "method": "get",
                  "path": "/{agency_id}/route_overview",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Routes",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "route_overview"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "route_code",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Calendar",
                "permalink": "/docs/petstore/get-calendar-agency-id-calendar-service-id-get"
              },
              "next": {
                "title": "Populate Route Stops",
                "permalink": "/docs/petstore/populate-route-stops-agency-id-route-stops-route-code-get"
              }
            },
            {
              "unversionedId": "petstore/get-routes-agency-id-routes-route-id-get",
              "id": "petstore/get-routes-agency-id-routes-route-id-get",
              "title": "Get Routes",
              "description": "Get Routes",
              "source": "@site/docs/petstore/get-routes-agency-id-routes-route-id-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-routes-agency-id-routes-route-id-get",
              "permalink": "/docs/petstore/get-routes-agency-id-routes-route-id-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-routes-agency-id-routes-route-id-get",
                "title": "Get Routes",
                "description": "Get Routes",
                "sidebar_label": "Get Routes",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_routes__agency_id__routes__route_id__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "route_id",
                      "required": true,
                      "schema": {
                        "title": "Route Id"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Get Routes",
                  "method": "get",
                  "path": "/{agency_id}/routes/{route_id}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Routes",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "routes",
                        ":route_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "route_id"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Populate Route Stops Grouped",
                "permalink": "/docs/petstore/populate-route-stops-grouped-agency-id-route-stops-grouped-route-code-get"
              },
              "next": {
                "title": "Get Shapes",
                "permalink": "/docs/petstore/get-shapes-agency-id-shapes-shape-id-get"
              }
            },
            {
              "unversionedId": "petstore/get-shapes-agency-id-shapes-shape-id-get",
              "id": "petstore/get-shapes-agency-id-shapes-shape-id-get",
              "title": "Get Shapes",
              "description": "Get Shapes",
              "source": "@site/docs/petstore/get-shapes-agency-id-shapes-shape-id-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-shapes-agency-id-shapes-shape-id-get",
              "permalink": "/docs/petstore/get-shapes-agency-id-shapes-shape-id-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-shapes-agency-id-shapes-shape-id-get",
                "title": "Get Shapes",
                "description": "Get Shapes",
                "sidebar_label": "Get Shapes",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_shapes__agency_id__shapes__shape_id__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "shape_id",
                      "required": true,
                      "schema": {
                        "title": "Shape Id"
                      }
                    },
                    {
                      "in": "query",
                      "name": "geojson",
                      "required": false,
                      "schema": {
                        "default": false,
                        "title": "Geojson",
                        "type": "boolean"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Get Shapes",
                  "method": "get",
                  "path": "/{agency_id}/shapes/{shape_id}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Shapes",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "shapes",
                        ":shape_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "geojson",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "shape_id"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Routes",
                "permalink": "/docs/petstore/get-routes-agency-id-routes-route-id-get"
              },
              "next": {
                "title": "Get Stop Times By Route Code And Agency",
                "permalink": "/docs/petstore/get-stop-times-by-route-code-and-agency-agency-id-stop-times-route-code-route-code-get"
              }
            },
            {
              "unversionedId": "petstore/get-stop-times-by-route-code-and-agency-agency-id-stop-times-route-code-route-code-get",
              "id": "petstore/get-stop-times-by-route-code-and-agency-agency-id-stop-times-route-code-route-code-get",
              "title": "Get Stop Times By Route Code And Agency",
              "description": "Get Stop Times By Route Code And Agency",
              "source": "@site/docs/petstore/get-stop-times-by-route-code-and-agency-agency-id-stop-times-route-code-route-code-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-stop-times-by-route-code-and-agency-agency-id-stop-times-route-code-route-code-get",
              "permalink": "/docs/petstore/get-stop-times-by-route-code-and-agency-agency-id-stop-times-route-code-route-code-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-stop-times-by-route-code-and-agency-agency-id-stop-times-route-code-route-code-get",
                "title": "Get Stop Times By Route Code And Agency",
                "description": "Get Stop Times By Route Code And Agency",
                "sidebar_label": "Get Stop Times By Route Code And Agency",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_stop_times_by_route_code_and_agency__agency_id__stop_times_route_code__route_code__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "route_code",
                      "required": true,
                      "schema": {
                        "title": "Route Code"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Get Stop Times By Route Code And Agency",
                  "method": "get",
                  "path": "/{agency_id}/stop_times/route_code/{route_code}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Stop Times By Route Code And Agency",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "stop_times",
                        "route_code",
                        ":route_code"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "route_code"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Shapes",
                "permalink": "/docs/petstore/get-shapes-agency-id-shapes-shape-id-get"
              },
              "next": {
                "title": "Get Stop Times By Trip Id And Agency",
                "permalink": "/docs/petstore/get-stop-times-by-trip-id-and-agency-agency-id-stop-times-trip-id-trip-id-get"
              }
            },
            {
              "unversionedId": "petstore/get-stop-times-by-trip-id-and-agency-agency-id-stop-times-trip-id-trip-id-get",
              "id": "petstore/get-stop-times-by-trip-id-and-agency-agency-id-stop-times-trip-id-trip-id-get",
              "title": "Get Stop Times By Trip Id And Agency",
              "description": "Get Stop Times By Trip Id And Agency",
              "source": "@site/docs/petstore/get-stop-times-by-trip-id-and-agency-agency-id-stop-times-trip-id-trip-id-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-stop-times-by-trip-id-and-agency-agency-id-stop-times-trip-id-trip-id-get",
              "permalink": "/docs/petstore/get-stop-times-by-trip-id-and-agency-agency-id-stop-times-trip-id-trip-id-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-stop-times-by-trip-id-and-agency-agency-id-stop-times-trip-id-trip-id-get",
                "title": "Get Stop Times By Trip Id And Agency",
                "description": "Get Stop Times By Trip Id And Agency",
                "sidebar_label": "Get Stop Times By Trip Id And Agency",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_stop_times_by_trip_id_and_agency__agency_id__stop_times_trip_id__trip_id__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "trip_id",
                      "required": true,
                      "schema": {
                        "title": "Trip Id"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Get Stop Times By Trip Id And Agency",
                  "method": "get",
                  "path": "/{agency_id}/stop_times/trip_id/{trip_id}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Stop Times By Trip Id And Agency",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "stop_times",
                        "trip_id",
                        ":trip_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "trip_id"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Stop Times By Route Code And Agency",
                "permalink": "/docs/petstore/get-stop-times-by-route-code-and-agency-agency-id-stop-times-route-code-route-code-get"
              },
              "next": {
                "title": "Get Stops",
                "permalink": "/docs/petstore/get-stops-agency-id-stops-stop-id-get"
              }
            },
            {
              "unversionedId": "petstore/get-stops-agency-id-stops-stop-id-get",
              "id": "petstore/get-stops-agency-id-stops-stop-id-get",
              "title": "Get Stops",
              "description": "Get Stops",
              "source": "@site/docs/petstore/get-stops-agency-id-stops-stop-id-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-stops-agency-id-stops-stop-id-get",
              "permalink": "/docs/petstore/get-stops-agency-id-stops-stop-id-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-stops-agency-id-stops-stop-id-get",
                "title": "Get Stops",
                "description": "Get Stops",
                "sidebar_label": "Get Stops",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_stops__agency_id__stops__stop_id__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "stop_id",
                      "required": true,
                      "schema": {
                        "title": "Stop Id"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Get Stops",
                  "method": "get",
                  "path": "/{agency_id}/stops/{stop_id}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Stops",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "stops",
                        ":stop_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "stop_id"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Stop Times By Trip Id And Agency",
                "permalink": "/docs/petstore/get-stop-times-by-trip-id-and-agency-agency-id-stop-times-trip-id-trip-id-get"
              },
              "next": {
                "title": "Get Trip Shapes",
                "permalink": "/docs/petstore/get-trip-shapes-agency-id-trip-shapes-shape-id-get"
              }
            },
            {
              "unversionedId": "petstore/get-time-time-get",
              "id": "petstore/get-time-time-get",
              "title": "Get Time",
              "description": "Get Time",
              "source": "@site/docs/petstore/get-time-time-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-time-time-get",
              "permalink": "/docs/petstore/get-time-time-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-time-time-get",
                "title": "Get Time",
                "description": "Get Time",
                "sidebar_label": "Get Time",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_time_time_get",
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    }
                  },
                  "description": "Get Time",
                  "method": "get",
                  "path": "/time",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Time",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "time"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Index",
                "permalink": "/docs/petstore/index-get"
              }
            },
            {
              "unversionedId": "petstore/get-trip-detail-agency-id-trip-detail-vehicle-id-get",
              "id": "petstore/get-trip-detail-agency-id-trip-detail-vehicle-id-get",
              "title": "Get Trip Detail",
              "description": "Get Trip Detail",
              "source": "@site/docs/petstore/get-trip-detail-agency-id-trip-detail-vehicle-id-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-trip-detail-agency-id-trip-detail-vehicle-id-get",
              "permalink": "/docs/petstore/get-trip-detail-agency-id-trip-detail-vehicle-id-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-trip-detail-agency-id-trip-detail-vehicle-id-get",
                "title": "Get Trip Detail",
                "description": "Get Trip Detail",
                "sidebar_label": "Get Trip Detail",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_trip_detail__agency_id__trip_detail__vehicle_id__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "vehicle_id",
                      "required": true,
                      "schema": {
                        "title": "Vehicle Id",
                        "type": "string"
                      }
                    },
                    {
                      "in": "query",
                      "name": "geojson",
                      "required": false,
                      "schema": {
                        "default": false,
                        "title": "Geojson",
                        "type": "boolean"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Real-Time data"
                  ],
                  "description": "Get Trip Detail",
                  "method": "get",
                  "path": "/{agency_id}/trip_detail/{vehicle_id}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Trip Detail",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "trip_detail",
                        ":vehicle_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "geojson",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "vehicle_id"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Canceled Trip Summary",
                "permalink": "/docs/petstore/get-canceled-trip-summary-canceled-service-summary-get"
              },
              "next": {
                "title": "All Trip Updates Updates",
                "permalink": "/docs/petstore/all-trip-updates-updates-agency-id-trip-updates-all-get"
              }
            },
            {
              "unversionedId": "petstore/get-trip-shapes-agency-id-trip-shapes-shape-id-get",
              "id": "petstore/get-trip-shapes-agency-id-trip-shapes-shape-id-get",
              "title": "Get Trip Shapes",
              "description": "Get Trip Shapes",
              "source": "@site/docs/petstore/get-trip-shapes-agency-id-trip-shapes-shape-id-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-trip-shapes-agency-id-trip-shapes-shape-id-get",
              "permalink": "/docs/petstore/get-trip-shapes-agency-id-trip-shapes-shape-id-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-trip-shapes-agency-id-trip-shapes-shape-id-get",
                "title": "Get Trip Shapes",
                "description": "Get Trip Shapes",
                "sidebar_label": "Get Trip Shapes",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "get_trip_shapes__agency_id__trip_shapes__shape_id__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "shape_id",
                      "required": true,
                      "schema": {
                        "title": "Shape Id"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Get Trip Shapes",
                  "method": "get",
                  "path": "/{agency_id}/trip_shapes/{shape_id}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Get Trip Shapes",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "trip_shapes",
                        ":shape_id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "shape_id"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Stops",
                "permalink": "/docs/petstore/get-stops-agency-id-stops-stop-id-get"
              },
              "next": {
                "title": "Get Bus Trips",
                "permalink": "/docs/petstore/get-bus-trips-agency-id-trips-trip-id-get"
              }
            },
            {
              "unversionedId": "petstore/index-get",
              "id": "petstore/index-get",
              "title": "Index",
              "description": "Index",
              "source": "@site/docs/petstore/index-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/index-get",
              "permalink": "/docs/petstore/index-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "index-get",
                "title": "Index",
                "description": "Index",
                "sidebar_label": "Index",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "index__get",
                  "responses": {
                    "200": {
                      "content": {
                        "text/html": {
                          "schema": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Successful Response"
                    }
                  },
                  "description": "Index",
                  "method": "get",
                  "path": "/",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Index",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ""
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "text/html"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Verify Email Route",
                "permalink": "/docs/petstore/verify-email-route-verify-email-email-verification-token-get"
              },
              "next": {
                "title": "Get Time",
                "permalink": "/docs/petstore/get-time-time-get"
              }
            },
            {
              "unversionedId": "petstore/login-for-access-token-token-post",
              "id": "petstore/login-for-access-token-token-post",
              "title": "Login For Access Token",
              "description": "Login For Access Token",
              "source": "@site/docs/petstore/login-for-access-token-token-post.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/login-for-access-token-token-post",
              "permalink": "/docs/petstore/login-for-access-token-token-post",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "login-for-access-token-token-post",
                "title": "Login For Access Token",
                "description": "Login For Access Token",
                "sidebar_label": "Login For Access Token",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "login_for_access_token_token_post",
                  "requestBody": {
                    "content": {
                      "application/x-www-form-urlencoded": {
                        "schema": {
                          "properties": {
                            "client_id": {
                              "title": "Client Id",
                              "type": "string"
                            },
                            "client_secret": {
                              "title": "Client Secret",
                              "type": "string"
                            },
                            "grant_type": {
                              "pattern": "password",
                              "title": "Grant Type",
                              "type": "string"
                            },
                            "password": {
                              "title": "Password",
                              "type": "string"
                            },
                            "scope": {
                              "default": "",
                              "title": "Scope",
                              "type": "string"
                            },
                            "username": {
                              "title": "Username",
                              "type": "string"
                            }
                          },
                          "required": [
                            "username",
                            "password"
                          ],
                          "title": "Body_login_for_access_token_token_post",
                          "type": "object"
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "access_token": {
                                "title": "Access Token",
                                "type": "string"
                              },
                              "token_type": {
                                "title": "Token Type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "access_token",
                              "token_type"
                            ],
                            "title": "Token",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "User Methods"
                  ],
                  "description": "Login For Access Token",
                  "method": "post",
                  "path": "/token",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Login For Access Token",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "token"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": []
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Login",
                "permalink": "/docs/petstore/login-login-get"
              },
              "next": {
                "title": "Create User",
                "permalink": "/docs/petstore/create-user-users-post"
              }
            },
            {
              "unversionedId": "petstore/login-login-get",
              "id": "petstore/login-login-get",
              "title": "Login",
              "description": "Login",
              "source": "@site/docs/petstore/login-login-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/login-login-get",
              "permalink": "/docs/petstore/login-login-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "login-login-get",
                "title": "Login",
                "description": "Login",
                "sidebar_label": "Login",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "login_login_get",
                  "responses": {
                    "200": {
                      "content": {
                        "text/html": {
                          "schema": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Successful Response"
                    }
                  },
                  "tags": [
                    "User Methods"
                  ],
                  "description": "Login",
                  "method": "get",
                  "path": "/login",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Login",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "text/html"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Gopass Schools",
                "permalink": "/docs/petstore/get-gopass-schools-get-gopass-schools-get"
              },
              "next": {
                "title": "Login For Access Token",
                "permalink": "/docs/petstore/login-for-access-token-token-post"
              }
            },
            {
              "unversionedId": "petstore/populate-route-stops-agency-id-route-stops-route-code-get",
              "id": "petstore/populate-route-stops-agency-id-route-stops-route-code-get",
              "title": "Populate Route Stops",
              "description": "Populate Route Stops",
              "source": "@site/docs/petstore/populate-route-stops-agency-id-route-stops-route-code-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/populate-route-stops-agency-id-route-stops-route-code-get",
              "permalink": "/docs/petstore/populate-route-stops-agency-id-route-stops-route-code-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "populate-route-stops-agency-id-route-stops-route-code-get",
                "title": "Populate Route Stops",
                "description": "Populate Route Stops",
                "sidebar_label": "Populate Route Stops",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "populate_route_stops__agency_id__route_stops__route_code__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "route_code",
                      "required": true,
                      "schema": {
                        "title": "Route Code",
                        "type": "string"
                      }
                    },
                    {
                      "in": "query",
                      "name": "daytype",
                      "required": false,
                      "schema": {
                        "allOf": [
                          {
                            "description": "An enumeration.",
                            "enum": [
                              "weekday",
                              "saturday",
                              "sunday",
                              "no_type",
                              "all"
                            ],
                            "title": "DayTypesEnum",
                            "type": "string"
                          }
                        ],
                        "default": "all"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Populate Route Stops",
                  "method": "get",
                  "path": "/{agency_id}/route_stops/{route_code}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Populate Route Stops",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "route_stops",
                        ":route_code"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "daytype",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "route_code"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Get Routes",
                "permalink": "/docs/petstore/get-routes-agency-id-route-overview-get"
              },
              "next": {
                "title": "Populate Route Stops Grouped",
                "permalink": "/docs/petstore/populate-route-stops-grouped-agency-id-route-stops-grouped-route-code-get"
              }
            },
            {
              "unversionedId": "petstore/populate-route-stops-grouped-agency-id-route-stops-grouped-route-code-get",
              "id": "petstore/populate-route-stops-grouped-agency-id-route-stops-grouped-route-code-get",
              "title": "Populate Route Stops Grouped",
              "description": "Populate Route Stops Grouped",
              "source": "@site/docs/petstore/populate-route-stops-grouped-agency-id-route-stops-grouped-route-code-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/populate-route-stops-grouped-agency-id-route-stops-grouped-route-code-get",
              "permalink": "/docs/petstore/populate-route-stops-grouped-agency-id-route-stops-grouped-route-code-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "populate-route-stops-grouped-agency-id-route-stops-grouped-route-code-get",
                "title": "Populate Route Stops Grouped",
                "description": "Populate Route Stops Grouped",
                "sidebar_label": "Populate Route Stops Grouped",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "populate_route_stops_grouped__agency_id__route_stops_grouped__route_code__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "route_code",
                      "required": true,
                      "schema": {
                        "title": "Route Code",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Static data"
                  ],
                  "description": "Populate Route Stops Grouped",
                  "method": "get",
                  "path": "/{agency_id}/route_stops_grouped/{route_code}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Populate Route Stops Grouped",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "route_stops_grouped",
                        ":route_code"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "route_code"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Populate Route Stops",
                "permalink": "/docs/petstore/populate-route-stops-agency-id-route-stops-route-code-get"
              },
              "next": {
                "title": "Get Routes",
                "permalink": "/docs/petstore/get-routes-agency-id-routes-route-id-get"
              }
            },
            {
              "unversionedId": "petstore/read-user-users-username-get",
              "id": "petstore/read-user-users-username-get",
              "title": "Read User",
              "description": "Read User",
              "source": "@site/docs/petstore/read-user-users-username-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/read-user-users-username-get",
              "permalink": "/docs/petstore/read-user-users-username-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "read-user-users-username-get",
                "title": "Read User",
                "description": "Read User",
                "sidebar_label": "Read User",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "read_user_users__username__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "username",
                      "required": true,
                      "schema": {
                        "title": "Username",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "email": {
                                "title": "Email",
                                "type": "string"
                              },
                              "id": {
                                "title": "Id",
                                "type": "integer"
                              },
                              "is_active": {
                                "title": "Is Active",
                                "type": "boolean"
                              },
                              "username": {
                                "title": "Username",
                                "type": "string"
                              }
                            },
                            "required": [
                              "username",
                              "email",
                              "id",
                              "is_active"
                            ],
                            "title": "User",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "security": [
                    {
                      "OAuth2PasswordBearer": []
                    }
                  ],
                  "tags": [
                    "User Methods"
                  ],
                  "description": "Read User",
                  "method": "get",
                  "path": "/users/{username}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Read User",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "users",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Create User",
                "permalink": "/docs/petstore/create-user-users-post"
              },
              "next": {
                "title": "Verify Email Route",
                "permalink": "/docs/petstore/verify-email-route-verify-email-email-verification-token-get"
              }
            },
            {
              "unversionedId": "petstore/vehicle-position-updates-agency-id-vehicle-positions-field-name-field-value-get",
              "id": "petstore/vehicle-position-updates-agency-id-vehicle-positions-field-name-field-value-get",
              "title": "Vehicle Position Updates",
              "description": "Vehicle Position Updates",
              "source": "@site/docs/petstore/vehicle-position-updates-agency-id-vehicle-positions-field-name-field-value-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/vehicle-position-updates-agency-id-vehicle-positions-field-name-field-value-get",
              "permalink": "/docs/petstore/vehicle-position-updates-agency-id-vehicle-positions-field-name-field-value-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "vehicle-position-updates-agency-id-vehicle-positions-field-name-field-value-get",
                "title": "Vehicle Position Updates",
                "description": "Vehicle Position Updates",
                "sidebar_label": "Vehicle Position Updates",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "vehicle_position_updates__agency_id__vehicle_positions__field_name___field_value__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "agency_id",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "LACMTA",
                          "LACMTA_Rail"
                        ],
                        "title": "AgencyIdEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "field_name",
                      "required": true,
                      "schema": {
                        "description": "An enumeration.",
                        "enum": [
                          "vehicle_id",
                          "trip_route_id",
                          "route_code",
                          "stop_id"
                        ],
                        "title": "VehiclePositionsFieldsEnum",
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "field_value",
                      "required": true,
                      "schema": {
                        "title": "Field Value"
                      }
                    },
                    {
                      "in": "query",
                      "name": "geojson",
                      "required": false,
                      "schema": {
                        "default": false,
                        "title": "Geojson",
                        "type": "boolean"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "Real-Time data"
                  ],
                  "description": "Vehicle Position Updates",
                  "method": "get",
                  "path": "/{agency_id}/vehicle_positions/{field_name}/{field_value}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Vehicle Position Updates",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        ":agency_id",
                        "vehicle_positions",
                        ":field_name",
                        ":field_value"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "key": "geojson",
                          "value": ""
                        }
                      ],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "agency_id"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "field_name"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "field_value"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "All Vehicle Position Updates",
                "permalink": "/docs/petstore/all-vehicle-position-updates-agency-id-vehicle-positions-all-get"
              },
              "next": {
                "title": "Get Gopass Schools",
                "permalink": "/docs/petstore/get-gopass-schools-get-gopass-schools-get"
              }
            },
            {
              "unversionedId": "petstore/verify-email-route-verify-email-email-verification-token-get",
              "id": "petstore/verify-email-route-verify-email-email-verification-token-get",
              "title": "Verify Email Route",
              "description": "Verify Email Route",
              "source": "@site/docs/petstore/verify-email-route-verify-email-email-verification-token-get.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/verify-email-route-verify-email-email-verification-token-get",
              "permalink": "/docs/petstore/verify-email-route-verify-email-email-verification-token-get",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "verify-email-route-verify-email-email-verification-token-get",
                "title": "Verify Email Route",
                "description": "Verify Email Route",
                "sidebar_label": "Verify Email Route",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "operationId": "verify_email_route_verify_email__email_verification_token__get",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "email_verification_token",
                      "required": true,
                      "schema": {
                        "title": "Email Verification Token",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {}
                        }
                      },
                      "description": "Successful Response"
                    },
                    "422": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "properties": {
                                    "loc": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "integer"
                                          }
                                        ]
                                      },
                                      "title": "Location",
                                      "type": "array"
                                    },
                                    "msg": {
                                      "title": "Message",
                                      "type": "string"
                                    },
                                    "type": {
                                      "title": "Error Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "loc",
                                    "msg",
                                    "type"
                                  ],
                                  "title": "ValidationError",
                                  "type": "object"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          }
                        }
                      },
                      "description": "Validation Error"
                    }
                  },
                  "tags": [
                    "User Methods"
                  ],
                  "description": "Verify Email Route",
                  "method": "get",
                  "path": "/verify_email/{email_verification_token}",
                  "servers": [
                    {
                      "url": "https://api.metro.net"
                    }
                  ],
                  "securitySchemes": {
                    "OAuth2PasswordBearer": {
                      "flows": {
                        "password": {
                          "scopes": {},
                          "tokenUrl": "token"
                        }
                      },
                      "type": "oauth2"
                    }
                  },
                  "info": {
                    "title": "FastAPI",
                    "version": "0.1.0"
                  },
                  "postman": {
                    "name": "Verify Email Route",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "verify_email",
                        ":email_verification_token"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "email_verification_token"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/fastapi",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Read User",
                "permalink": "/docs/petstore/read-user-users-username-get"
              },
              "next": {
                "title": "Index",
                "permalink": "/docs/petstore/index-get"
              }
            },
            {
              "unversionedId": "tutorial-basics/congratulations",
              "id": "tutorial-basics/congratulations",
              "title": "Congratulations!",
              "description": "You have just learned the basics of Docusaurus and made some changes to the initial template.",
              "source": "@site/docs/tutorial-basics/congratulations.md",
              "sourceDirName": "tutorial-basics",
              "slug": "/tutorial-basics/congratulations",
              "permalink": "/docs/tutorial-basics/congratulations",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/congratulations.md",
              "tags": [
                {
                  "label": "test",
                  "permalink": "/docs/tags/test"
                }
              ],
              "version": "current",
              "sidebarPosition": 6,
              "frontMatter": {
                "sidebar_position": 6,
                "tags": [
                  "test"
                ]
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Deploy your site",
                "permalink": "/docs/tutorial-basics/deploy-your-site"
              },
              "next": {
                "title": "Tutorial - Extras",
                "permalink": "/docs/category/tutorial---extras"
              }
            },
            {
              "unversionedId": "tutorial-basics/create-a-blog-post",
              "id": "tutorial-basics/create-a-blog-post",
              "title": "Create a Blog Post",
              "description": "Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed...",
              "source": "@site/docs/tutorial-basics/create-a-blog-post.md",
              "sourceDirName": "tutorial-basics",
              "slug": "/tutorial-basics/create-a-blog-post",
              "permalink": "/docs/tutorial-basics/create-a-blog-post",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/create-a-blog-post.md",
              "tags": [
                {
                  "label": "test",
                  "permalink": "/docs/tags/test"
                }
              ],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3,
                "tags": [
                  "test"
                ]
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Create a Document",
                "permalink": "/docs/tutorial-basics/create-a-document"
              },
              "next": {
                "title": "Markdown Features",
                "permalink": "/docs/tutorial-basics/markdown-features"
              }
            },
            {
              "unversionedId": "tutorial-basics/create-a-document",
              "id": "tutorial-basics/create-a-document",
              "title": "Create a Document",
              "description": "Documents are groups of pages connected through:",
              "source": "@site/docs/tutorial-basics/create-a-document.md",
              "sourceDirName": "tutorial-basics",
              "slug": "/tutorial-basics/create-a-document",
              "permalink": "/docs/tutorial-basics/create-a-document",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/create-a-document.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Create a Page",
                "permalink": "/docs/tutorial-basics/create-a-page"
              },
              "next": {
                "title": "Create a Blog Post",
                "permalink": "/docs/tutorial-basics/create-a-blog-post"
              }
            },
            {
              "unversionedId": "tutorial-basics/create-a-page",
              "id": "tutorial-basics/create-a-page",
              "title": "Create a Page",
              "description": "Add Markdown or React files to src/pages to create a standalone page:",
              "source": "@site/docs/tutorial-basics/create-a-page.md",
              "sourceDirName": "tutorial-basics",
              "slug": "/tutorial-basics/create-a-page",
              "permalink": "/docs/tutorial-basics/create-a-page",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/create-a-page.md",
              "tags": [
                {
                  "label": "test",
                  "permalink": "/docs/tags/test"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "tags": [
                  "test"
                ]
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Tutorial - Basics",
                "permalink": "/docs/category/tutorial---basics"
              },
              "next": {
                "title": "Create a Document",
                "permalink": "/docs/tutorial-basics/create-a-document"
              }
            },
            {
              "unversionedId": "tutorial-basics/deploy-your-site",
              "id": "tutorial-basics/deploy-your-site",
              "title": "Deploy your site",
              "description": "Docusaurus is a static-site-generator (also called Jamstack).",
              "source": "@site/docs/tutorial-basics/deploy-your-site.md",
              "sourceDirName": "tutorial-basics",
              "slug": "/tutorial-basics/deploy-your-site",
              "permalink": "/docs/tutorial-basics/deploy-your-site",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/deploy-your-site.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Markdown Features",
                "permalink": "/docs/tutorial-basics/markdown-features"
              },
              "next": {
                "title": "Congratulations!",
                "permalink": "/docs/tutorial-basics/congratulations"
              }
            },
            {
              "unversionedId": "tutorial-basics/markdown-features",
              "id": "tutorial-basics/markdown-features",
              "title": "Markdown Features",
              "description": "Docusaurus supports Markdown and a few additional features.",
              "source": "@site/docs/tutorial-basics/markdown-features.mdx",
              "sourceDirName": "tutorial-basics",
              "slug": "/tutorial-basics/markdown-features",
              "permalink": "/docs/tutorial-basics/markdown-features",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/markdown-features.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Create a Blog Post",
                "permalink": "/docs/tutorial-basics/create-a-blog-post"
              },
              "next": {
                "title": "Deploy your site",
                "permalink": "/docs/tutorial-basics/deploy-your-site"
              }
            },
            {
              "unversionedId": "tutorial-extras/manage-docs-versions",
              "id": "tutorial-extras/manage-docs-versions",
              "title": "Manage Docs Versions",
              "description": "Docusaurus can manage multiple versions of your docs.",
              "source": "@site/docs/tutorial-extras/manage-docs-versions.md",
              "sourceDirName": "tutorial-extras",
              "slug": "/tutorial-extras/manage-docs-versions",
              "permalink": "/docs/tutorial-extras/manage-docs-versions",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-extras/manage-docs-versions.md",
              "tags": [
                {
                  "label": "test",
                  "permalink": "/docs/tags/test"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "tags": [
                  "test"
                ]
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Tutorial - Extras",
                "permalink": "/docs/category/tutorial---extras"
              },
              "next": {
                "title": "Translate your site",
                "permalink": "/docs/tutorial-extras/translate-your-site"
              }
            },
            {
              "unversionedId": "tutorial-extras/translate-your-site",
              "id": "tutorial-extras/translate-your-site",
              "title": "Translate your site",
              "description": "Let's translate docs/intro.md to French.",
              "source": "@site/docs/tutorial-extras/translate-your-site.md",
              "sourceDirName": "tutorial-extras",
              "slug": "/tutorial-extras/translate-your-site",
              "permalink": "/docs/tutorial-extras/translate-your-site",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-extras/translate-your-site.md",
              "tags": [
                {
                  "label": "test",
                  "permalink": "/docs/tags/test"
                }
              ],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "tags": [
                  "test"
                ]
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Manage Docs Versions",
                "permalink": "/docs/tutorial-extras/manage-docs-versions"
              },
              "next": {
                "title": "Introduction",
                "permalink": "/docs/petstore/fastapi"
              }
            }
          ],
          "drafts": [],
          "sidebars": {
            "tutorialSidebar": [
              {
                "type": "doc",
                "id": "intro"
              },
              {
                "type": "category",
                "label": "Tutorial - Basics",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "tutorial-basics/create-a-page"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial-basics/create-a-document"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial-basics/create-a-blog-post"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial-basics/markdown-features"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial-basics/deploy-your-site"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial-basics/congratulations"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "5 minutes to learn the most important Docusaurus concepts.",
                  "slug": "/category/tutorial---basics",
                  "permalink": "/docs/category/tutorial---basics"
                }
              },
              {
                "type": "category",
                "label": "Tutorial - Extras",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "tutorial-extras/manage-docs-versions"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial-extras/translate-your-site"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "slug": "/category/tutorial---extras",
                  "permalink": "/docs/category/tutorial---extras"
                }
              },
              {
                "type": "category",
                "label": "petstore",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "petstore/fastapi",
                    "label": "Introduction"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/all-trip-updates-updates-agency-id-trip-updates-all-get",
                    "label": "All Trip Updates Updates",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/all-vehicle-position-updates-agency-id-vehicle-positions-all-get",
                    "label": "All Vehicle Position Updates",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/create-user-users-post",
                    "label": "Create User",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-agency-agency-id-agency-get",
                    "label": "Get Agency",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-bus-trips-agency-id-trips-trip-id-get",
                    "label": "Get Bus Trips",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-calendar-agency-id-calendar-service-id-get",
                    "label": "Get Calendar",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-calendar-dates-from-db-calendar-dates-get",
                    "label": "Get Calendar Dates From Db",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-canceled-trip-canceled-service-all-get",
                    "label": "Get Canceled Trip",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-canceled-trip-canceled-service-line-line-get",
                    "label": "Get Canceled Trip",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-canceled-trip-summary-canceled-service-summary-get",
                    "label": "Get Canceled Trip Summary",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-gopass-schools-get-gopass-schools-get",
                    "label": "Get Gopass Schools",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-gtfs-rt-trip-updates-by-field-name-agency-id-trip-updates-field-name-field-value-get",
                    "label": "Get Gtfs Rt Trip Updates By Field Name",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-routes-agency-id-route-overview-get",
                    "label": "Get Routes",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-routes-agency-id-routes-route-id-get",
                    "label": "Get Routes",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-shapes-agency-id-shapes-shape-id-get",
                    "label": "Get Shapes",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-stop-times-by-route-code-and-agency-agency-id-stop-times-route-code-route-code-get",
                    "label": "Get Stop Times By Route Code And Agency",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-stop-times-by-trip-id-and-agency-agency-id-stop-times-trip-id-trip-id-get",
                    "label": "Get Stop Times By Trip Id And Agency",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-stops-agency-id-stops-stop-id-get",
                    "label": "Get Stops",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-time-time-get",
                    "label": "Get Time",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-trip-detail-agency-id-trip-detail-vehicle-id-get",
                    "label": "Get Trip Detail",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-trip-shapes-agency-id-trip-shapes-shape-id-get",
                    "label": "Get Trip Shapes",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/index-get",
                    "label": "Index",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/login-for-access-token-token-post",
                    "label": "Login For Access Token",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/login-login-get",
                    "label": "Login",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/populate-route-stops-agency-id-route-stops-route-code-get",
                    "label": "Populate Route Stops",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/populate-route-stops-grouped-agency-id-route-stops-grouped-route-code-get",
                    "label": "Populate Route Stops Grouped",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/read-user-users-username-get",
                    "label": "Read User",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/vehicle-position-updates-agency-id-vehicle-positions-field-name-field-value-get",
                    "label": "Vehicle Position Updates",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/verify-email-route-verify-email-email-verification-token-get",
                    "label": "Verify Email Route",
                    "className": "get api-method"
                  }
                ]
              }
            ],
            "openApiSidebar": [
              {
                "type": "category",
                "label": "Petstore",
                "link": {
                  "type": "generated-index",
                  "title": "Petstore API",
                  "description": "This is a sample server Petstore server. You can find out more about Swagger at http://swagger.io or on irc.freenode.net, #swagger. For this sample, you can use the api key special-key to test the authorization filters.",
                  "slug": "/category/petstore-api",
                  "permalink": "/docs/category/petstore-api"
                },
                "items": [
                  {
                    "type": "doc",
                    "id": "petstore/fastapi"
                  },
                  {
                    "type": "category",
                    "label": "Static data",
                    "items": [
                      {
                        "type": "doc",
                        "id": "petstore/get-calendar-dates-from-db-calendar-dates-get",
                        "label": "Get Calendar Dates From Db",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-agency-agency-id-agency-get",
                        "label": "Get Agency",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-calendar-agency-id-calendar-service-id-get",
                        "label": "Get Calendar",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-routes-agency-id-route-overview-get",
                        "label": "Get Routes",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/populate-route-stops-agency-id-route-stops-route-code-get",
                        "label": "Populate Route Stops",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/populate-route-stops-grouped-agency-id-route-stops-grouped-route-code-get",
                        "label": "Populate Route Stops Grouped",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-routes-agency-id-routes-route-id-get",
                        "label": "Get Routes",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-shapes-agency-id-shapes-shape-id-get",
                        "label": "Get Shapes",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-stop-times-by-route-code-and-agency-agency-id-stop-times-route-code-route-code-get",
                        "label": "Get Stop Times By Route Code And Agency",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-stop-times-by-trip-id-and-agency-agency-id-stop-times-trip-id-trip-id-get",
                        "label": "Get Stop Times By Trip Id And Agency",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-stops-agency-id-stops-stop-id-get",
                        "label": "Get Stops",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-trip-shapes-agency-id-trip-shapes-shape-id-get",
                        "label": "Get Trip Shapes",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-bus-trips-agency-id-trips-trip-id-get",
                        "label": "Get Bus Trips",
                        "className": "api-method get",
                        "translatable": true
                      }
                    ],
                    "collapsed": true,
                    "collapsible": true
                  },
                  {
                    "type": "category",
                    "label": "Real-Time data",
                    "items": [
                      {
                        "type": "doc",
                        "id": "petstore/get-canceled-trip-canceled-service-all-get",
                        "label": "Get Canceled Trip",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-canceled-trip-canceled-service-line-line-get",
                        "label": "Get Canceled Trip",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-canceled-trip-summary-canceled-service-summary-get",
                        "label": "Get Canceled Trip Summary",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-trip-detail-agency-id-trip-detail-vehicle-id-get",
                        "label": "Get Trip Detail",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/all-trip-updates-updates-agency-id-trip-updates-all-get",
                        "label": "All Trip Updates Updates",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-gtfs-rt-trip-updates-by-field-name-agency-id-trip-updates-field-name-field-value-get",
                        "label": "Get Gtfs Rt Trip Updates By Field Name",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/all-vehicle-position-updates-agency-id-vehicle-positions-all-get",
                        "label": "All Vehicle Position Updates",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/vehicle-position-updates-agency-id-vehicle-positions-field-name-field-value-get",
                        "label": "Vehicle Position Updates",
                        "className": "api-method get",
                        "translatable": true
                      }
                    ],
                    "collapsed": true,
                    "collapsible": true
                  },
                  {
                    "type": "category",
                    "label": "Other data",
                    "items": [
                      {
                        "type": "doc",
                        "id": "petstore/get-gopass-schools-get-gopass-schools-get",
                        "label": "Get Gopass Schools",
                        "className": "api-method get",
                        "translatable": true
                      }
                    ],
                    "collapsed": true,
                    "collapsible": true
                  },
                  {
                    "type": "category",
                    "label": "User Methods",
                    "items": [
                      {
                        "type": "doc",
                        "id": "petstore/login-login-get",
                        "label": "Login",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/login-for-access-token-token-post",
                        "label": "Login For Access Token",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/create-user-users-post",
                        "label": "Create User",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/read-user-users-username-get",
                        "label": "Read User",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/verify-email-route-verify-email-email-verification-token-get",
                        "label": "Verify Email Route",
                        "className": "api-method get",
                        "translatable": true
                      }
                    ],
                    "collapsed": true,
                    "collapsible": true
                  },
                  {
                    "type": "category",
                    "label": "UNTAGGED",
                    "items": [
                      {
                        "type": "doc",
                        "id": "petstore/index-get",
                        "label": "Index",
                        "className": "api-method get",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "petstore/get-time-time-get",
                        "label": "Get Time",
                        "className": "api-method get",
                        "translatable": true
                      }
                    ],
                    "collapsed": true,
                    "collapsible": true
                  }
                ],
                "collapsed": true,
                "collapsible": true
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [
        {
          "id": "welcome",
          "metadata": {
            "permalink": "/blog/welcome",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-08-26-welcome/index.md",
            "source": "@site/blog/2021-08-26-welcome/index.md",
            "title": "Welcome",
            "description": "Docusaurus blogging features are powered by the blog plugin.",
            "date": "2021-08-26T00:00:00.000Z",
            "formattedDate": "August 26, 2021",
            "tags": [
              {
                "label": "facebook",
                "permalink": "/blog/tags/facebook"
              },
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.405,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Sébastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              },
              {
                "name": "Yangshun Tay",
                "title": "Front End Engineer @ Facebook",
                "url": "https://github.com/yangshun",
                "imageURL": "https://github.com/yangshun.png",
                "key": "yangshun"
              }
            ],
            "frontMatter": {
              "slug": "welcome",
              "title": "Welcome",
              "authors": [
                "slorber",
                "yangshun"
              ],
              "tags": [
                "facebook",
                "hello",
                "docusaurus"
              ]
            },
            "nextItem": {
              "title": "MDX Blog Post",
              "permalink": "/blog/mdx-blog-post"
            }
          },
          "content": "[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\n\nSimply add Markdown files (or folders) to the `blog` directory.\n\nRegular blog authors can be added to `authors.yml`.\n\nThe blog post date can be extracted from filenames, such as:\n\n- `2019-05-30-welcome.md`\n- `2019-05-30-welcome/index.md`\n\nA blog post folder can be convenient to co-locate blog post images:\n\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\n\nThe blog supports tags as well!\n\n**And if you don't want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."
        },
        {
          "id": "mdx-blog-post",
          "metadata": {
            "permalink": "/blog/mdx-blog-post",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-08-01-mdx-blog-post.mdx",
            "source": "@site/blog/2021-08-01-mdx-blog-post.mdx",
            "title": "MDX Blog Post",
            "description": "Blog posts support Docusaurus Markdown features, such as MDX.",
            "date": "2021-08-01T00:00:00.000Z",
            "formattedDate": "August 1, 2021",
            "tags": [
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.175,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Sébastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              }
            ],
            "frontMatter": {
              "slug": "mdx-blog-post",
              "title": "MDX Blog Post",
              "authors": [
                "slorber"
              ],
              "tags": [
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Welcome",
              "permalink": "/blog/welcome"
            },
            "nextItem": {
              "title": "Long Blog Post",
              "permalink": "/blog/long-blog-post"
            }
          },
          "content": "Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\n\n:::tip\n\nUse the power of React to create interactive blog posts.\n\n```js\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n```\n\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n\n:::"
        },
        {
          "id": "long-blog-post",
          "metadata": {
            "permalink": "/blog/long-blog-post",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-29-long-blog-post.md",
            "source": "@site/blog/2019-05-29-long-blog-post.md",
            "title": "Long Blog Post",
            "description": "This is the summary of a very long blog post,",
            "date": "2019-05-29T00:00:00.000Z",
            "formattedDate": "May 29, 2019",
            "tags": [
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 2.05,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Endilie Yacop Sucipto",
                "title": "Maintainer of Docusaurus",
                "url": "https://github.com/endiliey",
                "imageURL": "https://github.com/endiliey.png",
                "key": "endi"
              }
            ],
            "frontMatter": {
              "slug": "long-blog-post",
              "title": "Long Blog Post",
              "authors": "endi",
              "tags": [
                "hello",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "MDX Blog Post",
              "permalink": "/blog/mdx-blog-post"
            },
            "nextItem": {
              "title": "First Blog Post",
              "permalink": "/blog/first-blog-post"
            }
          },
          "content": "This is the summary of a very long blog post,\n\nUse a `<!--` `truncate` `-->` comment to limit blog post size in the list view.\n\n<!--truncate-->\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        },
        {
          "id": "first-blog-post",
          "metadata": {
            "permalink": "/blog/first-blog-post",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-28-first-blog-post.md",
            "source": "@site/blog/2019-05-28-first-blog-post.md",
            "title": "First Blog Post",
            "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet",
            "date": "2019-05-28T00:00:00.000Z",
            "formattedDate": "May 28, 2019",
            "tags": [
              {
                "label": "hola",
                "permalink": "/blog/tags/hola"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.12,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              }
            ],
            "frontMatter": {
              "slug": "first-blog-post",
              "title": "First Blog Post",
              "authors": {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              },
              "tags": [
                "hola",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Long Blog Post",
              "permalink": "/blog/long-blog-post"
            }
          },
          "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        }
      ],
      "blogListPaginated": [
        {
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "metadata": {
            "permalink": "/blog",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 1,
            "totalCount": 4,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        }
      ],
      "blogTags": {
        "/blog/tags/facebook": {
          "label": "facebook",
          "items": [
            "welcome"
          ],
          "permalink": "/blog/tags/facebook",
          "pages": [
            {
              "items": [
                "welcome"
              ],
              "metadata": {
                "permalink": "/blog/tags/facebook",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hello": {
          "label": "hello",
          "items": [
            "welcome",
            "long-blog-post"
          ],
          "permalink": "/blog/tags/hello",
          "pages": [
            {
              "items": [
                "welcome",
                "long-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/hello",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 2,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/docusaurus": {
          "label": "docusaurus",
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "permalink": "/blog/tags/docusaurus",
          "pages": [
            {
              "items": [
                "welcome",
                "mdx-blog-post",
                "long-blog-post",
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/docusaurus",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 4,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hola": {
          "label": "hola",
          "items": [
            "first-blog-post"
          ],
          "permalink": "/blog/tags/hola",
          "pages": [
            {
              "items": [
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/hola",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        }
      },
      "blogTagsListPath": "/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "jsx",
        "permalink": "/",
        "source": "@site/src/pages/index.js"
      },
      {
        "type": "mdx",
        "permalink": "/markdown-page",
        "source": "@site/src/pages/markdown-page.md",
        "title": "Markdown page example",
        "description": "You don't need React to write simple standalone pages.",
        "frontMatter": {
          "title": "Markdown page example"
        }
      }
    ]
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "docusaurus-plugin-openapi-docs": {},
  "docusaurus-theme-openapi": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}